{
  "X3D": {
    "encoding": "UTF-8",
    "@profile": "Immersive",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema": "http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "title",
          "@content": "sphereflowers.x3d"
        },
        {
          "@name": "creator",
          "@content": "John Carlson"
        },
        {
          "@name": "description",
          "@content": "5 or more prismatic flowers"
        },
        {
          "@name": "generator",
          "@content": "X3D-Edit, https://savage.nps.edu/X3D-Edit"
        },
        {
          "@name": "identifier",
          "@content": "https://coderextreme.net/X3DJSONLD/sphereflowers.x3d"
        },
        {
          "@name": "translated",
          "@content": "30 January 2018"
        },
        {
          "@name": "generator",
          "@content": "X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {
          "NavigationInfo": {}
        },
        {
          "Background": {
            "@backUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
            ],
            "@bottomUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
            ],
            "@frontUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
            ],
            "@leftUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
            ],
            "@rightUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
            ],
            "@topUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
            ]
          }
        },
        {
          "Group": {
            "-children": [
              {},
              {},
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE2000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE2000_texture",
                                      "-back": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottom": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-front": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-left": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-right": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-top": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE2000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@type": "SFVec3f",
                                            "@accessType": "inputOutput",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/freewrl_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/freewrl.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE2000_Bounce",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFTime"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceText": [
                                "ecmascript: function initialize() { translation = new SFVec3f(0, 0, 0); velocity = new SFVec3f( Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5); } function set_fraction() { translation = new SFVec3f( translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z); for (var j = 0; j <= 2; j++) { if (Math.abs(translation.x) > 10) { initialize(); } else if (Math.abs(translation.y) > 10) { initialize(); } else if (Math.abs(translation.z) > 10) { initialize(); } else { velocity.x += Math.random() * 0.2 - 0.1; velocity.y += Math.random() * 0.2 - 0.1; velocity.z += Math.random() * 0.2 - 0.1; } } animate_flowers(); } function animate_flowers(fraction, eventTime) { choice = Math.floor(Math.random() * 4); switch (choice) { case 0: a += Math.random() * 0.2 - 0.1; break; case 1: b += Math.random() * 0.2 - 0.1; break; case 2: c += Math.random() * 2 - 1; break; case 3: d += Math.random() * 2 - 1; break; } tdelta += 0.5; pdelta += 0.5; if (a > 1) { a = 0.5; } if (b > 1) { b = 0.5; } if (c < 1) { c = 4; } if (d < 1) { d = 4; } if (c > 10) { c = 4; } if (d > 10) { d = 4; } }"
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE2000_TourTime",
                              "@cycleInterval": 0.15,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_TourTime",
                              "@fromField": "cycleTime",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_Bounce",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Bounce",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Bounce",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Bounce",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Bounce",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Bounce",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Bounce",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Bounce",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE4000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE4000_texture",
                                      "-back": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottom": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-front": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-left": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-right": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-top": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE4000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@type": "SFVec3f",
                                            "@accessType": "inputOutput",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/freewrl_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/freewrl.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE4000_Bounce",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFTime"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceText": [
                                "ecmascript: function initialize() { translation = new SFVec3f(0, 0, 0); velocity = new SFVec3f( Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5); } function set_fraction() { translation = new SFVec3f( translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z); for (var j = 0; j <= 2; j++) { if (Math.abs(translation.x) > 10) { initialize(); } else if (Math.abs(translation.y) > 10) { initialize(); } else if (Math.abs(translation.z) > 10) { initialize(); } else { velocity.x += Math.random() * 0.2 - 0.1; velocity.y += Math.random() * 0.2 - 0.1; velocity.z += Math.random() * 0.2 - 0.1; } } animate_flowers(); } function animate_flowers(fraction, eventTime) { choice = Math.floor(Math.random() * 4); switch (choice) { case 0: a += Math.random() * 0.2 - 0.1; break; case 1: b += Math.random() * 0.2 - 0.1; break; case 2: c += Math.random() * 2 - 1; break; case 3: d += Math.random() * 2 - 1; break; } tdelta += 0.5; pdelta += 0.5; if (a > 1) { a = 0.5; } if (b > 1) { b = 0.5; } if (c < 1) { c = 4; } if (d < 1) { d = 4; } if (c > 10) { c = 4; } if (d > 10) { d = 4; } }"
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE4000_TourTime",
                              "@cycleInterval": 0.15,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_TourTime",
                              "@fromField": "cycleTime",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_Bounce",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Bounce",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Bounce",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Bounce",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Bounce",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Bounce",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Bounce",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Bounce",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE6000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE6000_texture",
                                      "-back": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottom": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-front": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-left": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-right": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-top": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE6000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@type": "SFVec3f",
                                            "@accessType": "inputOutput",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/freewrl_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/freewrl.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE6000_Bounce",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFTime"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceText": [
                                "ecmascript: function initialize() { translation = new SFVec3f(0, 0, 0); velocity = new SFVec3f( Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5); } function set_fraction() { translation = new SFVec3f( translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z); for (var j = 0; j <= 2; j++) { if (Math.abs(translation.x) > 10) { initialize(); } else if (Math.abs(translation.y) > 10) { initialize(); } else if (Math.abs(translation.z) > 10) { initialize(); } else { velocity.x += Math.random() * 0.2 - 0.1; velocity.y += Math.random() * 0.2 - 0.1; velocity.z += Math.random() * 0.2 - 0.1; } } animate_flowers(); } function animate_flowers(fraction, eventTime) { choice = Math.floor(Math.random() * 4); switch (choice) { case 0: a += Math.random() * 0.2 - 0.1; break; case 1: b += Math.random() * 0.2 - 0.1; break; case 2: c += Math.random() * 2 - 1; break; case 3: d += Math.random() * 2 - 1; break; } tdelta += 0.5; pdelta += 0.5; if (a > 1) { a = 0.5; } if (b > 1) { b = 0.5; } if (c < 1) { c = 4; } if (d < 1) { d = 4; } if (c > 10) { c = 4; } if (d > 10) { d = 4; } }"
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE6000_TourTime",
                              "@cycleInterval": 0.15,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_TourTime",
                              "@fromField": "cycleTime",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_Bounce",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Bounce",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Bounce",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Bounce",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Bounce",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Bounce",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Bounce",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Bounce",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE8000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE8000_texture",
                                      "-back": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottom": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-front": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-left": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-right": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-top": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE8000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@type": "SFVec3f",
                                            "@accessType": "inputOutput",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/freewrl_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/freewrl.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE8000_Bounce",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFTime"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceText": [
                                "ecmascript: function initialize() { translation = new SFVec3f(0, 0, 0); velocity = new SFVec3f( Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5); } function set_fraction() { translation = new SFVec3f( translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z); for (var j = 0; j <= 2; j++) { if (Math.abs(translation.x) > 10) { initialize(); } else if (Math.abs(translation.y) > 10) { initialize(); } else if (Math.abs(translation.z) > 10) { initialize(); } else { velocity.x += Math.random() * 0.2 - 0.1; velocity.y += Math.random() * 0.2 - 0.1; velocity.z += Math.random() * 0.2 - 0.1; } } animate_flowers(); } function animate_flowers(fraction, eventTime) { choice = Math.floor(Math.random() * 4); switch (choice) { case 0: a += Math.random() * 0.2 - 0.1; break; case 1: b += Math.random() * 0.2 - 0.1; break; case 2: c += Math.random() * 2 - 1; break; case 3: d += Math.random() * 2 - 1; break; } tdelta += 0.5; pdelta += 0.5; if (a > 1) { a = 0.5; } if (b > 1) { b = 0.5; } if (c < 1) { c = 4; } if (d < 1) { d = 4; } if (c > 10) { c = 4; } if (d > 10) { d = 4; } }"
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE8000_TourTime",
                              "@cycleInterval": 0.15,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_TourTime",
                              "@fromField": "cycleTime",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_Bounce",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Bounce",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Bounce",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Bounce",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Bounce",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Bounce",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Bounce",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Bounce",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE10000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE10000_texture",
                                      "-back": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottom": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-front": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-left": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-right": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-top": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE10000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@type": "SFVec3f",
                                            "@accessType": "inputOutput",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/freewrl_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/freewrl.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE10000_Bounce",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFTime"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceText": [
                                "ecmascript: function initialize() { translation = new SFVec3f(0, 0, 0); velocity = new SFVec3f( Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5); } function set_fraction() { translation = new SFVec3f( translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z); for (var j = 0; j <= 2; j++) { if (Math.abs(translation.x) > 10) { initialize(); } else if (Math.abs(translation.y) > 10) { initialize(); } else if (Math.abs(translation.z) > 10) { initialize(); } else { velocity.x += Math.random() * 0.2 - 0.1; velocity.y += Math.random() * 0.2 - 0.1; velocity.z += Math.random() * 0.2 - 0.1; } } animate_flowers(); } function animate_flowers(fraction, eventTime) { choice = Math.floor(Math.random() * 4); switch (choice) { case 0: a += Math.random() * 0.2 - 0.1; break; case 1: b += Math.random() * 0.2 - 0.1; break; case 2: c += Math.random() * 2 - 1; break; case 3: d += Math.random() * 2 - 1; break; } tdelta += 0.5; pdelta += 0.5; if (a > 1) { a = 0.5; } if (b > 1) { b = 0.5; } if (c < 1) { c = 4; } if (d < 1) { d = 4; } if (c > 10) { c = 4; } if (d > 10) { d = 4; } }"
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE10000_TourTime",
                              "@cycleInterval": 0.15,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_TourTime",
                              "@fromField": "cycleTime",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_Bounce",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Bounce",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Bounce",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Bounce",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Bounce",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Bounce",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Bounce",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Bounce",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE12000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE12000_texture",
                                      "-back": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottom": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-front": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-left": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-right": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-top": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE12000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@type": "SFVec3f",
                                            "@accessType": "inputOutput",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 3
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/freewrl_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/freewrl.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE12000_Bounce",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFTime"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceText": [
                                "ecmascript: function initialize() { translation = new SFVec3f(0, 0, 0); velocity = new SFVec3f( Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5); } function set_fraction() { translation = new SFVec3f( translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z); for (var j = 0; j <= 2; j++) { if (Math.abs(translation.x) > 10) { initialize(); } else if (Math.abs(translation.y) > 10) { initialize(); } else if (Math.abs(translation.z) > 10) { initialize(); } else { velocity.x += Math.random() * 0.2 - 0.1; velocity.y += Math.random() * 0.2 - 0.1; velocity.z += Math.random() * 0.2 - 0.1; } } animate_flowers(); } function animate_flowers(fraction, eventTime) { choice = Math.floor(Math.random() * 4); switch (choice) { case 0: a += Math.random() * 0.2 - 0.1; break; case 1: b += Math.random() * 0.2 - 0.1; break; case 2: c += Math.random() * 2 - 1; break; case 3: d += Math.random() * 2 - 1; break; } tdelta += 0.5; pdelta += 0.5; if (a > 1) { a = 0.5; } if (b > 1) { b = 0.5; } if (c < 1) { c = 4; } if (d < 1) { d = 4; } if (c > 10) { c = 4; } if (d > 10) { d = 4; } }"
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE12000_TourTime",
                              "@cycleInterval": 0.15,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_TourTime",
                              "@fromField": "cycleTime",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_Bounce",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Bounce",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Bounce",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Bounce",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Bounce",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Bounce",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Bounce",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Bounce",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  }
}