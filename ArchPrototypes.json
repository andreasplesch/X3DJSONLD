{
  "X3D": {
    "@profile": "Immersive",
    "@version": 3.3,
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-3.3.xsd",
    "Scene": {
      "#comment": [
        "Add any ROUTEs here that connect ProtoInstance to/from prior nodes in Scene (and outside of ProtoDeclare)"
      ],
      "-children": [
        {},
        {
          "Group": {
            "#comment": [
              "First node determines node type of this prototype",
              "IndexedFaceset creates arch",
              "Subsequent nodes do not render, but still must be a valid X3D subgraph",
              "This embedded Script provides the X3D author with additional visibility and control over prototype inputs and outputs"
            ],
            "-children": [
              {
                "Transform": {
                  "@DEF": "ArchTransformArchPrototypeArchInstanceArchPrototype",
                  "-children": [
                    {
                      "Shape": {
                        "@DEF": "ArchArchPrototypeArchInstanceArchPrototype",
                        "#comment": [
                          "note that convex='false' (meaning concave geometry) is crucial for this IFS of a geometric chord to render properly"
                        ],
                        "-geometry": [
                          {
                            "IndexedFaceSet": {
                              "@DEF": "ArchIndexArchPrototypeArchInstanceArchPrototype",
                              "@convex": false,
                              "@solid": false,
                              "-coord": [
                                {
                                  "Coordinate": {
                                    "@DEF": "ArchChordArchPrototypeArchInstanceArchPrototype",
                                    "@class": "ArchChordArchPrototypeArchInstanceArchPrototype"
                                  }
                                }
                              ],
                              "@class": "ArchIndexArchPrototypeArchInstanceArchPrototype"
                            }
                          }
                        ],
                        "-appearance": [
                          {
                            "Appearance": {
                              "-material": [
                                {
                                  "Material": {
                                    "@DEF": "MaterialNodeArchPrototypeArchInstanceArchPrototype",
                                    "@class": "MaterialNodeArchPrototypeArchInstanceArchPrototype",
                                    "@diffuseColor": [
                                      0.5,
                                      0.3,
                                      0.6
                                    ],
                                    "@emissiveColor": [
                                      0.5,
                                      0.3,
                                      0.6
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "@class": "ArchArchPrototypeArchInstanceArchPrototype"
                      }
                    }
                  ],
                  "@class": "ArchTransformArchPrototypeArchInstanceArchPrototype"
                }
              },
              {
                "Script": {
                  "@DEF": "ArchPrototypeScriptArchPrototypeArchInstanceArchPrototype",
                  "@url": [
                    "ArchPrototypeScript.js"
                  ],
                  "#comment": [
                    "INPUT PARAMETERS",
                    "General parameters",
                    "Parameters to create to create shapes related to arch: put true to apply",
                    "OUTPUT PARAMETERS"
                  ],
                  "field": [
                    {
                      "@name": "clearSpanWidth",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for clearSpanWidth parameter",
                      "@type": "SFFloat",
                      "@value": 5
                    },
                    {
                      "@name": "riseHeight",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for riseHeight parameter",
                      "@type": "SFFloat",
                      "@value": 2.5
                    },
                    {
                      "@name": "depth",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for depth parameter",
                      "@type": "SFFloat",
                      "@value": 2
                    },
                    {
                      "@name": "topAbutmentHeight",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for topAbutmentHeight parameter",
                      "@type": "SFFloat",
                      "@value": 0.6
                    },
                    {
                      "@name": "pierWidth",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for pierWidth parameter",
                      "@type": "SFFloat",
                      "@value": 1
                    },
                    {
                      "@name": "pierHeight",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for pierHeight parameter",
                      "@type": "SFFloat",
                      "@value": 2
                    },
                    {
                      "@name": "archHalf",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for archHalf parameter",
                      "@type": "SFBool",
                      "@value": false
                    },
                    {
                      "@name": "archHalfExtensionWidth",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for archHalfExtensionWidth parameter",
                      "@type": "SFFloat",
                      "@value": 0
                    },
                    {
                      "@name": "onlyIntrados",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for onlyIntrados parameter",
                      "@type": "SFBool",
                      "@value": false
                    },
                    {
                      "@name": "archFilled",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for archFilled parameter",
                      "@type": "SFBool",
                      "@value": false
                    },
                    {
                      "@name": "archHalfFilled",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for archHalfFilled parameter",
                      "@type": "SFBool",
                      "@value": false
                    },
                    {
                      "@name": "lintel",
                      "@accessType": "initializeOnly",
                      "@appinfo": "user or default input for lintel parameter",
                      "@type": "SFBool",
                      "@value": false
                    },
                    {
                      "@name": "computedScale",
                      "@accessType": "outputOnly",
                      "@appinfo": "computedScale: modify scale field - NOTE it is not used to modify the whole arch, but to modify clearSpanWidth, riseHeight, depth. It does not affect topAbutmentHeight, pierWidth, pierHeight, archHalfExtensionWidth",
                      "@type": "SFVec3f"
                    },
                    {
                      "@name": "pointOut",
                      "@accessType": "outputOnly",
                      "@appinfo": "send computed points to the Coordinate node",
                      "@type": "MFVec3f"
                    },
                    {
                      "@name": "indexOut",
                      "@accessType": "outputOnly",
                      "@appinfo": "send computed indices to the IndexedFaceSet node",
                      "@type": "MFInt32"
                    }
                  ],
                  "@class": "ArchPrototypeScriptArchPrototypeArchInstanceArchPrototype"
                }
              }
            ],
            "ROUTE": [
              {
                "@fromField": "computedScale",
                "@fromNode": "ArchPrototypeScriptArchPrototypeArchInstanceArchPrototype",
                "@toField": "scale",
                "@toNode": "ArchTransformArchPrototypeArchInstanceArchPrototype"
              },
              {
                "@fromField": "pointOut",
                "@fromNode": "ArchPrototypeScriptArchPrototypeArchInstanceArchPrototype",
                "@toField": "point",
                "@toNode": "ArchChordArchPrototypeArchInstanceArchPrototype"
              },
              {
                "@fromField": "indexOut",
                "@fromNode": "ArchPrototypeScriptArchPrototypeArchInstanceArchPrototype",
                "@toField": "set_coordIndex",
                "@toNode": "ArchIndexArchPrototypeArchInstanceArchPrototype"
              }
            ],
            "@DEF": "ArchInstanceArchPrototype",
            "@class": "ArchInstanceArchPrototype"
          }
        },
        {
          "Inline": {
            "@DEF": "CoordinateAxes",
            "@url": [
              "CoordinateAxes.x3d"
            ],
            "@class": "CoordinateAxes"
          }
        }
      ]
    }
  }
}
