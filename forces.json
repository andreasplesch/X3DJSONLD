{
  "X3D": {
    "@profile": "Immersive",
    "@version": 4,
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-4.0.xsd",
    "head": {
      "meta": [
        {
          "@name": "creator",
          "@content": "John W Carlson"
        },
        {
          "@name": "created",
          "@content": "December 13 2015"
        },
        {
          "@name": "title",
          "@content": "force.x3d"
        },
        {
          "@name": "identifier",
          "@content": "http://coderextreme.net/X3DJSONLD/force.x3d"
        },
        {
          "@name": "description",
          "@content": "beginnings of a force directed graph in 3D"
        },
        {
          "@name": "generator",
          "@content": "Vim, X3D-Edit, https://savage.nps.edu/X3D-Edit"
        }
      ]
    },
    "Scene": {
      "-children": [
        {},
        {},
        {
          "Transform": {
            "@DEF": "HoldsContent",
            "@scale": [
              0.1,
              0.1,
              0.1
            ],
            "-children": [
              {
                "PlaneSensor": {
                  "@DEF": "clickGenerator",
                  "@minPosition": [
                    -50,
                    -50
                  ],
                  "@maxPosition": [
                    50,
                    50
                  ],
                  "@description": "click on background to add nodes, click on nodes to add links",
                  "@axisRotation": [
                    0,
                    1,
                    0,
                    0
                  ],
                  "@class": "clickGenerator"
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "transformnodenodeAnode",
                        "-children": [
                          {
                            "Shape": {
                              "-geometry": [
                                {
                                  "Sphere": {}
                                }
                              ],
                              "-appearance": [
                                {
                                  "Appearance": {
                                    "-material": [
                                      {
                                        "Material": {
                                          "@diffuseColor": [
                                            1,
                                            0,
                                            0
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "Transform": {
                              "@translation": [
                                1,
                                0,
                                0
                              ],
                              "-children": [
                                {
                                  "Shape": {
                                    "-geometry": [
                                      {
                                        "Text": {
                                          "@string": [
                                            "Node"
                                          ],
                                          "-fontStyle": [
                                            {
                                              "FontStyle": {
                                                "@justify": [
                                                  "MIDDLE",
                                                  "MIDDLE"
                                                ],
                                                "@size": 5
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "-appearance": [
                                      {
                                        "Appearance": {
                                          "-material": [
                                            {
                                              "Material": {
                                                "@diffuseColor": [
                                                  0,
                                                  0,
                                                  1
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "@class": "transformnodenodeAnode",
                        "@translation": [
                          0,
                          0,
                          0
                        ]
                      }
                    },
                    {
                      "PositionInterpolator": {
                        "@DEF": "NodePositionnodenodeAnode",
                        "@key": [
                          0,
                          1
                        ],
                        "@keyValue": [
                          0,
                          0,
                          0,
                          0,
                          5,
                          0
                        ],
                        "@class": "NodePositionnodenodeAnode"
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "MoveBallnodenodeAnode",
                        "field": [
                          {
                            "@name": "translation",
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@value": [
                              50,
                              50,
                              0
                            ]
                          },
                          {
                            "@name": "old",
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@value": [
                              0,
                              0,
                              0
                            ]
                          },
                          {
                            "@name": "set_location",
                            "@accessType": "inputOnly",
                            "@type": "SFTime"
                          },
                          {
                            "@name": "keyValue",
                            "@accessType": "outputOnly",
                            "@type": "MFVec3f"
                          }
                        ],
                        "#sourceText": [
                          "ecmascript:",
                          "\t\t\t\t\tfunction set_location(value) {",
                          "                                                old = translation;",
                          "\t\t\t\t\t\ttranslation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);",
                          "                                                keyValue = new MFVec3f(old, translation);",
                          "\t\t\t\t\t}"
                        ],
                        "@class": "MoveBallnodenodeAnode"
                      }
                    },
                    {
                      "TimeSensor": {
                        "@DEF": "nodeClocknodenodeAnode",
                        "@cycleInterval": 3,
                        "@loop": true,
                        "@class": "nodeClocknodenodeAnode"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "nodeClocknodenodeAnode",
                        "@fromField": "cycleTime",
                        "@toNode": "MoveBallnodenodeAnode",
                        "@toField": "set_location"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "nodeClocknodenodeAnode",
                        "@fromField": "fraction_changed",
                        "@toNode": "NodePositionnodenodeAnode",
                        "@toField": "set_fraction"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "MoveBallnodenodeAnode",
                        "@fromField": "keyValue",
                        "@toNode": "NodePositionnodenodeAnode",
                        "@toField": "keyValue"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "NodePositionnodenodeAnode",
                        "@fromField": "value_changed",
                        "@toNode": "transformnodenodeAnode",
                        "@toField": "set_translation"
                      }
                    }
                  ],
                  "@DEF": "nodeAnode",
                  "@class": "nodeAnode"
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "transformnodenodeBnode",
                        "-children": [
                          {
                            "Shape": {
                              "-geometry": [
                                {
                                  "Sphere": {}
                                }
                              ],
                              "-appearance": [
                                {
                                  "Appearance": {
                                    "-material": [
                                      {
                                        "Material": {
                                          "@diffuseColor": [
                                            1,
                                            0,
                                            0
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "Transform": {
                              "@translation": [
                                1,
                                0,
                                0
                              ],
                              "-children": [
                                {
                                  "Shape": {
                                    "-geometry": [
                                      {
                                        "Text": {
                                          "@string": [
                                            "Node"
                                          ],
                                          "-fontStyle": [
                                            {
                                              "FontStyle": {
                                                "@justify": [
                                                  "MIDDLE",
                                                  "MIDDLE"
                                                ],
                                                "@size": 5
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "-appearance": [
                                      {
                                        "Appearance": {
                                          "-material": [
                                            {
                                              "Material": {
                                                "@diffuseColor": [
                                                  0,
                                                  0,
                                                  1
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "@class": "transformnodenodeBnode",
                        "@translation": [
                          50,
                          50,
                          50
                        ]
                      }
                    },
                    {
                      "PositionInterpolator": {
                        "@DEF": "NodePositionnodenodeBnode",
                        "@key": [
                          0,
                          1
                        ],
                        "@keyValue": [
                          0,
                          0,
                          0,
                          0,
                          5,
                          0
                        ],
                        "@class": "NodePositionnodenodeBnode"
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "MoveBallnodenodeBnode",
                        "field": [
                          {
                            "@name": "translation",
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@value": [
                              50,
                              50,
                              0
                            ]
                          },
                          {
                            "@name": "old",
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@value": [
                              0,
                              0,
                              0
                            ]
                          },
                          {
                            "@name": "set_location",
                            "@accessType": "inputOnly",
                            "@type": "SFTime"
                          },
                          {
                            "@name": "keyValue",
                            "@accessType": "outputOnly",
                            "@type": "MFVec3f"
                          }
                        ],
                        "#sourceText": [
                          "ecmascript:",
                          "\t\t\t\t\tfunction set_location(value) {",
                          "                                                old = translation;",
                          "\t\t\t\t\t\ttranslation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);",
                          "                                                keyValue = new MFVec3f(old, translation);",
                          "\t\t\t\t\t}"
                        ],
                        "@class": "MoveBallnodenodeBnode"
                      }
                    },
                    {
                      "TimeSensor": {
                        "@DEF": "nodeClocknodenodeBnode",
                        "@cycleInterval": 3,
                        "@loop": true,
                        "@class": "nodeClocknodenodeBnode"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "nodeClocknodenodeBnode",
                        "@fromField": "cycleTime",
                        "@toNode": "MoveBallnodenodeBnode",
                        "@toField": "set_location"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "nodeClocknodenodeBnode",
                        "@fromField": "fraction_changed",
                        "@toNode": "NodePositionnodenodeBnode",
                        "@toField": "set_fraction"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "MoveBallnodenodeBnode",
                        "@fromField": "keyValue",
                        "@toNode": "NodePositionnodenodeBnode",
                        "@toField": "keyValue"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "NodePositionnodenodeBnode",
                        "@fromField": "value_changed",
                        "@toNode": "transformnodenodeBnode",
                        "@toField": "set_translation"
                      }
                    }
                  ],
                  "@DEF": "nodeBnode",
                  "@class": "nodeBnode"
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "transformnodenodeCnode",
                        "-children": [
                          {
                            "Shape": {
                              "-geometry": [
                                {
                                  "Sphere": {}
                                }
                              ],
                              "-appearance": [
                                {
                                  "Appearance": {
                                    "-material": [
                                      {
                                        "Material": {
                                          "@diffuseColor": [
                                            1,
                                            0,
                                            0
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "Transform": {
                              "@translation": [
                                1,
                                0,
                                0
                              ],
                              "-children": [
                                {
                                  "Shape": {
                                    "-geometry": [
                                      {
                                        "Text": {
                                          "@string": [
                                            "Node"
                                          ],
                                          "-fontStyle": [
                                            {
                                              "FontStyle": {
                                                "@justify": [
                                                  "MIDDLE",
                                                  "MIDDLE"
                                                ],
                                                "@size": 5
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "-appearance": [
                                      {
                                        "Appearance": {
                                          "-material": [
                                            {
                                              "Material": {
                                                "@diffuseColor": [
                                                  0,
                                                  0,
                                                  1
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "@class": "transformnodenodeCnode",
                        "@translation": [
                          -50,
                          -50,
                          -50
                        ]
                      }
                    },
                    {
                      "PositionInterpolator": {
                        "@DEF": "NodePositionnodenodeCnode",
                        "@key": [
                          0,
                          1
                        ],
                        "@keyValue": [
                          0,
                          0,
                          0,
                          0,
                          5,
                          0
                        ],
                        "@class": "NodePositionnodenodeCnode"
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "MoveBallnodenodeCnode",
                        "field": [
                          {
                            "@name": "translation",
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@value": [
                              50,
                              50,
                              0
                            ]
                          },
                          {
                            "@name": "old",
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@value": [
                              0,
                              0,
                              0
                            ]
                          },
                          {
                            "@name": "set_location",
                            "@accessType": "inputOnly",
                            "@type": "SFTime"
                          },
                          {
                            "@name": "keyValue",
                            "@accessType": "outputOnly",
                            "@type": "MFVec3f"
                          }
                        ],
                        "#sourceText": [
                          "ecmascript:",
                          "\t\t\t\t\tfunction set_location(value) {",
                          "                                                old = translation;",
                          "\t\t\t\t\t\ttranslation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);",
                          "                                                keyValue = new MFVec3f(old, translation);",
                          "\t\t\t\t\t}"
                        ],
                        "@class": "MoveBallnodenodeCnode"
                      }
                    },
                    {
                      "TimeSensor": {
                        "@DEF": "nodeClocknodenodeCnode",
                        "@cycleInterval": 3,
                        "@loop": true,
                        "@class": "nodeClocknodenodeCnode"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "nodeClocknodenodeCnode",
                        "@fromField": "cycleTime",
                        "@toNode": "MoveBallnodenodeCnode",
                        "@toField": "set_location"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "nodeClocknodenodeCnode",
                        "@fromField": "fraction_changed",
                        "@toNode": "NodePositionnodenodeCnode",
                        "@toField": "set_fraction"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "MoveBallnodenodeCnode",
                        "@fromField": "keyValue",
                        "@toNode": "NodePositionnodenodeCnode",
                        "@toField": "keyValue"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "NodePositionnodenodeCnode",
                        "@fromField": "value_changed",
                        "@toNode": "transformnodenodeCnode",
                        "@toField": "set_translation"
                      }
                    }
                  ],
                  "@DEF": "nodeCnode",
                  "@class": "nodeCnode"
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "transformnodenodeDnode",
                        "-children": [
                          {
                            "Shape": {
                              "-geometry": [
                                {
                                  "Sphere": {}
                                }
                              ],
                              "-appearance": [
                                {
                                  "Appearance": {
                                    "-material": [
                                      {
                                        "Material": {
                                          "@diffuseColor": [
                                            1,
                                            0,
                                            0
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "Transform": {
                              "@translation": [
                                1,
                                0,
                                0
                              ],
                              "-children": [
                                {
                                  "Shape": {
                                    "-geometry": [
                                      {
                                        "Text": {
                                          "@string": [
                                            "Node"
                                          ],
                                          "-fontStyle": [
                                            {
                                              "FontStyle": {
                                                "@justify": [
                                                  "MIDDLE",
                                                  "MIDDLE"
                                                ],
                                                "@size": 5
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "-appearance": [
                                      {
                                        "Appearance": {
                                          "-material": [
                                            {
                                              "Material": {
                                                "@diffuseColor": [
                                                  0,
                                                  0,
                                                  1
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "@class": "transformnodenodeDnode",
                        "@translation": [
                          50,
                          50,
                          -50
                        ]
                      }
                    },
                    {
                      "PositionInterpolator": {
                        "@DEF": "NodePositionnodenodeDnode",
                        "@key": [
                          0,
                          1
                        ],
                        "@keyValue": [
                          0,
                          0,
                          0,
                          0,
                          5,
                          0
                        ],
                        "@class": "NodePositionnodenodeDnode"
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "MoveBallnodenodeDnode",
                        "field": [
                          {
                            "@name": "translation",
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@value": [
                              50,
                              50,
                              0
                            ]
                          },
                          {
                            "@name": "old",
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@value": [
                              0,
                              0,
                              0
                            ]
                          },
                          {
                            "@name": "set_location",
                            "@accessType": "inputOnly",
                            "@type": "SFTime"
                          },
                          {
                            "@name": "keyValue",
                            "@accessType": "outputOnly",
                            "@type": "MFVec3f"
                          }
                        ],
                        "#sourceText": [
                          "ecmascript:",
                          "\t\t\t\t\tfunction set_location(value) {",
                          "                                                old = translation;",
                          "\t\t\t\t\t\ttranslation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);",
                          "                                                keyValue = new MFVec3f(old, translation);",
                          "\t\t\t\t\t}"
                        ],
                        "@class": "MoveBallnodenodeDnode"
                      }
                    },
                    {
                      "TimeSensor": {
                        "@DEF": "nodeClocknodenodeDnode",
                        "@cycleInterval": 3,
                        "@loop": true,
                        "@class": "nodeClocknodenodeDnode"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "nodeClocknodenodeDnode",
                        "@fromField": "cycleTime",
                        "@toNode": "MoveBallnodenodeDnode",
                        "@toField": "set_location"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "nodeClocknodenodeDnode",
                        "@fromField": "fraction_changed",
                        "@toNode": "NodePositionnodenodeDnode",
                        "@toField": "set_fraction"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "MoveBallnodenodeDnode",
                        "@fromField": "keyValue",
                        "@toNode": "NodePositionnodenodeDnode",
                        "@toField": "keyValue"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "NodePositionnodenodeDnode",
                        "@fromField": "value_changed",
                        "@toNode": "transformnodenodeDnode",
                        "@toField": "set_translation"
                      }
                    }
                  ],
                  "@DEF": "nodeDnode",
                  "@class": "nodeDnode"
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Shape": {
                        "-geometry": [
                          {
                            "Extrusion": {
                              "@DEF": "extrusioncylinderlinkAcylinder",
                              "@creaseAngle": 0.785,
                              "@crossSection": [
                                1,
                                0,
                                0.92,
                                -0.38,
                                0.71,
                                -0.71,
                                0.38,
                                -0.92,
                                0,
                                -1,
                                -0.38,
                                -0.92,
                                -0.71,
                                -0.71,
                                -0.92,
                                -0.38,
                                -1,
                                0,
                                -0.92,
                                0.38,
                                -0.71,
                                0.71,
                                -0.38,
                                0.92,
                                0,
                                1,
                                0.38,
                                0.92,
                                0.71,
                                0.71,
                                0.92,
                                0.38,
                                1,
                                0
                              ],
                              "@spine": [
                                0,
                                -50,
                                0,
                                0,
                                50,
                                0
                              ],
                              "@class": "extrusioncylinderlinkAcylinder"
                            }
                          }
                        ],
                        "-appearance": [
                          {
                            "Appearance": {
                              "-material": [
                                {
                                  "Material": {
                                    "@diffuseColor": [
                                      0,
                                      1,
                                      0
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "MoveCylindercylinderlinkAcylinder",
                        "field": [
                          {
                            "@name": "spine",
                            "@accessType": "inputOutput",
                            "@type": "MFVec3f",
                            "@value": [
                              0,
                              -50,
                              0,
                              0,
                              50,
                              0
                            ]
                          },
                          {
                            "@name": "set_endA",
                            "@accessType": "inputOnly",
                            "@type": "SFVec3f",
                            "@value": [
                              0,
                              0,
                              0
                            ]
                          },
                          {
                            "@name": "set_endB",
                            "@accessType": "inputOnly",
                            "@type": "SFVec3f",
                            "@value": [
                              50,
                              50,
                              50
                            ]
                          }
                        ],
                        "#sourceText": [
                          "ecmascript:",
                          "",
                          "                function set_endA(value) {",
                          "\t\t    if (typeof spine === 'undefined') {",
                          "\t\t        spine = new MFVec3f(value, value);",
                          "\t\t    } else {",
                          "\t\t        spine = new MFVec3f(value, spine[1]);",
                          "\t\t    }",
                          "                }",
                          "                ",
                          "                function set_endB(value) {",
                          "\t\t    if (typeof spine === 'undefined') {",
                          "\t\t        spine = new MFVec3f(value, value);",
                          "\t\t    } else {",
                          "\t\t        spine = new MFVec3f(spine[0], value);",
                          "\t\t    }",
                          "                }",
                          "                ",
                          "                function set_spine(value) {",
                          "                    spine = value;",
                          "                }"
                        ],
                        "@class": "MoveCylindercylinderlinkAcylinder"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "MoveCylindercylinderlinkAcylinder",
                        "@fromField": "spine",
                        "@toNode": "extrusioncylinderlinkAcylinder",
                        "@toField": "set_spine"
                      }
                    }
                  ],
                  "@DEF": "linkAcylinder",
                  "@class": "linkAcylinder"
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Shape": {
                        "-geometry": [
                          {
                            "Extrusion": {
                              "@DEF": "extrusioncylinderlinkBcylinder",
                              "@creaseAngle": 0.785,
                              "@crossSection": [
                                1,
                                0,
                                0.92,
                                -0.38,
                                0.71,
                                -0.71,
                                0.38,
                                -0.92,
                                0,
                                -1,
                                -0.38,
                                -0.92,
                                -0.71,
                                -0.71,
                                -0.92,
                                -0.38,
                                -1,
                                0,
                                -0.92,
                                0.38,
                                -0.71,
                                0.71,
                                -0.38,
                                0.92,
                                0,
                                1,
                                0.38,
                                0.92,
                                0.71,
                                0.71,
                                0.92,
                                0.38,
                                1,
                                0
                              ],
                              "@spine": [
                                0,
                                -50,
                                0,
                                0,
                                50,
                                0
                              ],
                              "@class": "extrusioncylinderlinkBcylinder"
                            }
                          }
                        ],
                        "-appearance": [
                          {
                            "Appearance": {
                              "-material": [
                                {
                                  "Material": {
                                    "@diffuseColor": [
                                      0,
                                      1,
                                      0
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "MoveCylindercylinderlinkBcylinder",
                        "field": [
                          {
                            "@name": "spine",
                            "@accessType": "inputOutput",
                            "@type": "MFVec3f",
                            "@value": [
                              0,
                              -50,
                              0,
                              0,
                              50,
                              0
                            ]
                          },
                          {
                            "@name": "set_endA",
                            "@accessType": "inputOnly",
                            "@type": "SFVec3f",
                            "@value": [
                              0,
                              0,
                              0
                            ]
                          },
                          {
                            "@name": "set_endB",
                            "@accessType": "inputOnly",
                            "@type": "SFVec3f",
                            "@value": [
                              -50,
                              -50,
                              -50
                            ]
                          }
                        ],
                        "#sourceText": [
                          "ecmascript:",
                          "",
                          "                function set_endA(value) {",
                          "\t\t    if (typeof spine === 'undefined') {",
                          "\t\t        spine = new MFVec3f(value, value);",
                          "\t\t    } else {",
                          "\t\t        spine = new MFVec3f(value, spine[1]);",
                          "\t\t    }",
                          "                }",
                          "                ",
                          "                function set_endB(value) {",
                          "\t\t    if (typeof spine === 'undefined') {",
                          "\t\t        spine = new MFVec3f(value, value);",
                          "\t\t    } else {",
                          "\t\t        spine = new MFVec3f(spine[0], value);",
                          "\t\t    }",
                          "                }",
                          "                ",
                          "                function set_spine(value) {",
                          "                    spine = value;",
                          "                }"
                        ],
                        "@class": "MoveCylindercylinderlinkBcylinder"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "MoveCylindercylinderlinkBcylinder",
                        "@fromField": "spine",
                        "@toNode": "extrusioncylinderlinkBcylinder",
                        "@toField": "set_spine"
                      }
                    }
                  ],
                  "@DEF": "linkBcylinder",
                  "@class": "linkBcylinder"
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Shape": {
                        "-geometry": [
                          {
                            "Extrusion": {
                              "@DEF": "extrusioncylinderlinkCcylinder",
                              "@creaseAngle": 0.785,
                              "@crossSection": [
                                1,
                                0,
                                0.92,
                                -0.38,
                                0.71,
                                -0.71,
                                0.38,
                                -0.92,
                                0,
                                -1,
                                -0.38,
                                -0.92,
                                -0.71,
                                -0.71,
                                -0.92,
                                -0.38,
                                -1,
                                0,
                                -0.92,
                                0.38,
                                -0.71,
                                0.71,
                                -0.38,
                                0.92,
                                0,
                                1,
                                0.38,
                                0.92,
                                0.71,
                                0.71,
                                0.92,
                                0.38,
                                1,
                                0
                              ],
                              "@spine": [
                                0,
                                -50,
                                0,
                                0,
                                50,
                                0
                              ],
                              "@class": "extrusioncylinderlinkCcylinder"
                            }
                          }
                        ],
                        "-appearance": [
                          {
                            "Appearance": {
                              "-material": [
                                {
                                  "Material": {
                                    "@diffuseColor": [
                                      0,
                                      1,
                                      0
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "MoveCylindercylinderlinkCcylinder",
                        "field": [
                          {
                            "@name": "spine",
                            "@accessType": "inputOutput",
                            "@type": "MFVec3f",
                            "@value": [
                              0,
                              -50,
                              0,
                              0,
                              50,
                              0
                            ]
                          },
                          {
                            "@name": "set_endA",
                            "@accessType": "inputOnly",
                            "@type": "SFVec3f",
                            "@value": [
                              50,
                              50,
                              50
                            ]
                          },
                          {
                            "@name": "set_endB",
                            "@accessType": "inputOnly",
                            "@type": "SFVec3f",
                            "@value": [
                              50,
                              50,
                              -50
                            ]
                          }
                        ],
                        "#sourceText": [
                          "ecmascript:",
                          "",
                          "                function set_endA(value) {",
                          "\t\t    if (typeof spine === 'undefined') {",
                          "\t\t        spine = new MFVec3f(value, value);",
                          "\t\t    } else {",
                          "\t\t        spine = new MFVec3f(value, spine[1]);",
                          "\t\t    }",
                          "                }",
                          "                ",
                          "                function set_endB(value) {",
                          "\t\t    if (typeof spine === 'undefined') {",
                          "\t\t        spine = new MFVec3f(value, value);",
                          "\t\t    } else {",
                          "\t\t        spine = new MFVec3f(spine[0], value);",
                          "\t\t    }",
                          "                }",
                          "                ",
                          "                function set_spine(value) {",
                          "                    spine = value;",
                          "                }"
                        ],
                        "@class": "MoveCylindercylinderlinkCcylinder"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "MoveCylindercylinderlinkCcylinder",
                        "@fromField": "spine",
                        "@toNode": "extrusioncylinderlinkCcylinder",
                        "@toField": "set_spine"
                      }
                    }
                  ],
                  "@DEF": "linkCcylinder",
                  "@class": "linkCcylinder"
                }
              }
            ],
            "@class": "HoldsContent"
          }
        },
        {
          "Script": {
            "@DEF": "clickHandler",
            "field": [
              {
                "@name": "counter",
                "@accessType": "inputOutput",
                "@value": 0,
                "@type": "SFInt32"
              },
              {
                "@name": "node_changed",
                "@accessType": "outputOnly",
                "@type": "SFNode"
              },
              {
                "@name": "add_node",
                "@accessType": "inputOnly",
                "@value": 0,
                "@type": "SFBool"
              },
              {
                "@name": "ModifiableNode",
                "@type": "SFNode",
                "@accessType": "initializeOnly",
                "-children": [
                  {
                    "Transform": {
                      "@USE": "HoldsContent"
                    }
                  }
                ]
              }
            ],
            "#sourceText": [
              "ecmascript:",
              "\tfunction add_node(value) {",
              "                Browser.print('hey ', counter);",
              "                counter = counter++;",
              "        \tnode_changed = Browser.createX3DFromString(\"<ProtoInstance DEF='node\"+counter+\"' name='node'><fieldValue name='position' value='0.0 0.0 0.0'/></ProtoInstance>\");",
              "                ModifiableNode.children[ModifiableNode.children.length] = node_changed[0];",
              "        }"
            ],
            "@class": "clickHandler"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "clickGenerator",
            "@fromField": "isActive",
            "@toNode": "clickHandler",
            "@toField": "add_node"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "transformnodenodeAnode",
            "@fromField": "translation",
            "@toNode": "MoveCylindercylinderlinkAcylinder",
            "@toField": "set_endA"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "transformnodenodeBnode",
            "@fromField": "translation",
            "@toNode": "MoveCylindercylinderlinkAcylinder",
            "@toField": "set_endB"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "transformnodenodeAnode",
            "@fromField": "translation",
            "@toNode": "MoveCylindercylinderlinkBcylinder",
            "@toField": "set_endA"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "transformnodenodeCnode",
            "@fromField": "translation",
            "@toNode": "MoveCylindercylinderlinkBcylinder",
            "@toField": "set_endB"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "transformnodenodeAnode",
            "@fromField": "translation",
            "@toNode": "MoveCylindercylinderlinkCcylinder",
            "@toField": "set_endA"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "transformnodenodeDnode",
            "@fromField": "translation",
            "@toNode": "MoveCylindercylinderlinkCcylinder",
            "@toField": "set_endB"
          }
        }
      ]
    }
  }
}
