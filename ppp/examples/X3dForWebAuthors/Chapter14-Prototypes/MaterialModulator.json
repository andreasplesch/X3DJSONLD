{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"MaterialModulator.x3d"
          },
          {
            "@name":"description",
            "@content":"Mimic a Material node and modulate fields as an animation effect"
          },
          {
            "@name":"hint",
            "@content":"try changing the modulation script so that it goes from [0 ... 1] and then [1 ... 0] alternating, rather than abruptly shifting from 1 immediately back to 0."
          },
          {
            "@name":"creator",
            "@content":"Don Brutzman"
          },
          {
            "@name":"created",
            "@content":"10 March 2008"
          },
          {
            "@name":"modified",
            "@content":"28 November 2014"
          },
          {
            "@name":"subject",
            "@content":"X3D prototype requiring Script inputOutput fields"
          },
          {
            "@name":"Image",
            "@content":"MaterialModulator.png"
          },
          {
            "@name":"identifier",
            "@content":"http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14-Prototypes/MaterialModulator.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../license.html"
          },
          {
            "@name":"translated",
            "@content":"18 January 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "#comment":"Rendered geometry for the ProtoInstance now follows prototype declaration"
          },
          { "Transform":
            {
              "@translation":[0,1,0],
              "-children":[
                { "Shape":
                  {
                    "-geometry":
                      { "Sphere":
                        {
                        }
                      },
                    "-appearance":
                      { "Appearance":
                        {
                          "-material":
                            { "Material":
                              {
                                "@DEF":"DECLMaterialModulator_MaterialModulatorInstance_MaterialNode",
                                "@diffuseColor":[0.5,0.1,0.1]
                              }
                            }
                        }
                      }
                  }
                },
                { "Switch":
                  {
                    "@whichChoice":-1,
                    "-children":[
                      { "Group":
                        {
                          "-children":[
                            { "#comment":"Only first node (the node type) is renderable, others are along for the ride"
                            },
                            { "Script":
                              {
                                "@DEF":"DECLMaterialModulator_MaterialModulatorInstance_MaterialModulatorScript",
                                "field": [
                                  {
                                    "@name":"enabled",
                                    "@accessType":"inputOutput",
                                    "@type":"SFBool",
                                    "@value":true
                                  },
                                  {
                                    "@name":"diffuseColor",
                                    "@accessType":"inputOutput",
                                    "@type":"SFColor",
                                    "@value":[0.5,0.1,0.1]
                                  },
                                  {
                                    "@name":"newColor",
                                    "@accessType":"outputOnly",
                                    "@type":"SFColor"
                                  },
                                  {
                                    "@name":"clockTrigger",
                                    "@accessType":"inputOnly",
                                    "@type":"SFTime"
                                  }
                                ],
                                "#sourceText":[
"ecmascript:",
"function initialize ()",
"{",
"    newColor = diffuseColor; // start with correct color",
"}",
"",
"function clockTrigger (timeValue)",
"{",
"    if (!enabled) return;",
"    red   = newColor.r;",
"    green = newColor.g;",
"    blue  = newColor.b;",
"    ",
"    // note different modulation rates for each color component, % is modulus operator",
"    newColor = new SFColor ((red + 0.02) % 1, (green + 0.03) % 1, (blue + 0.04) % 1);",
"\tif (enabled)",
"\t{",
"\t\tBrowser.print ('diffuseColor=(' + red +',' + green + ',' + blue + ') newColor=' + newColor.toString() + '",
"');",
"\t}",
"}"
]
                              }
                            },
                            { "#comment":"Clock tickles Script to wake up and compute a new value"
                            },
                            { "ROUTE":
                              {
                                "@fromNode":"DECLMaterialModulator_MaterialModulatorInstance_MaterialModulatorScript",
                                "@fromField":"newColor",
                                "@toNode":"DECLMaterialModulator_MaterialModulatorInstance_MaterialNode",
                                "@toField":"diffuseColor"
                              }
                            },
                            { "TimeSensor":
                              {
                                "@DEF":"DECLMaterialModulator_MaterialModulatorInstance_ModulationClock",
                                "@cycleInterval":0.1,
                                "@loop":true
                              }
                            },
                            { "ROUTE":
                              {
                                "@fromNode":"DECLMaterialModulator_MaterialModulatorInstance_ModulationClock",
                                "@fromField":"cycleTime",
                                "@toNode":"DECLMaterialModulator_MaterialModulatorInstance_MaterialModulatorScript",
                                "@toField":"clockTrigger"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          { "#comment":"Selectable Text design pattern has transparent Box and TouchSensor description as a tooltip"
          },
          { "Transform":
            {
              "@translation":[0,-2,0],
              "-children":[
                { "Shape":
                  {
                    "-geometry":
                      { "Text":
                        {
                          "@string":["enable/disable","MaterialModulator"],
                          "-fontStyle":
                            { "FontStyle":
                              {
                                "@family":["SANS"],
                                "@justify":["MIDDLE","MIDDLE"],
                                "@style":"BOLD"
                              }
                            }
                        }
                      },
                    "-appearance":
                      { "Appearance":
                        {
                          "-material":
                            { "Material":
                              {
                                "@diffuseColor":[0.9,0.9,0.9]
                              }
                            }
                        }
                      }
                  }
                },
                { "Shape":
                  {
                    "-geometry":
                      { "Box":
                        {
                          "@size":[8,2,0.001]
                        }
                      },
                    "-appearance":
                      { "Appearance":
                        {
                          "-material":
                            { "Material":
                              {
                                "@transparency":1
                              }
                            }
                        }
                      }
                  }
                },
                { "#comment":"Toggle text to enable/disable MaterialModulator"
                },
                { "TouchSensor":
                  {
                    "@DEF":"TouchTextInterface",
                    "@description":"Select to enable/disable MaterialModulator"
                  }
                },
                { "BooleanToggle":
                  {
                    "@DEF":"EventToggler"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode":"TouchTextInterface",
                    "@fromField":"isActive",
                    "@toNode":"EventToggler",
                    "@toField":"set_boolean"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode":"EventToggler",
                    "@fromField":"toggle",
                    "@toNode":"DECLMaterialModulator_MaterialModulatorInstance_MaterialModulatorScript",
                    "@toField":"enabled"
                  }
                }
              ]
            }
          }
        ]
    }
  }
}