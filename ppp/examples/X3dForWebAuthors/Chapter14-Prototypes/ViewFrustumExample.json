{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"ViewFrustumExample.x3d"
          },
          {
            "@name":"description",
            "@content":"Display view frustum associated with a given pair of Viewpoint and NavigationInfo nodes"
          },
          {
            "@name":"creator",
            "@content":"Don Brutzman"
          },
          {
            "@name":"translated",
            "@content":"16 August 2008"
          },
          {
            "@name":"modified",
            "@content":"1 July 2016"
          },
          {
            "@name":"reference",
            "@content":"ViewFrustumPrototype.x3d"
          },
          {
            "@name":"drawing",
            "@content":"ViewFrustumComputation.png"
          },
          {
            "@name":"Image",
            "@content":"ViewFrustumOverheadView.png"
          },
          {
            "@name":"Image",
            "@content":"ViewFrustumObliqueView.png"
          },
          {
            "@name":"Image",
            "@content":"ViewpointCalculator.png"
          },
          {
            "@name":"Image",
            "@content":"ViewpointCalculatorComposed.png"
          },
          {
            "@name":"subject",
            "@content":"view culling frustum"
          },
          {
            "@name":"identifier",
            "@content":"http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14-Prototypes/ViewFrustumExample.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../license.html"
          },
          {
            "@name":"translated",
            "@content":"02 January 2017"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"warning",
            "@content":"An experimental version of X3D JSON encoding is used for this scene.  Status online at http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "Viewpoint":
            {
              "@description":"ViewFrustum from above, looking down",
              "@orientation":[1,0,0,-1.57],
              "@position":[0,40,0]
            }
          },
          { "Viewpoint":
            {
              "@description":"ViewFrustum from point of view"
            }
          },
          { "Viewpoint":
            {
              "@description":"ViewFrustum behind point of view",
              "@position":[0,0,15]
            }
          },
          { "Viewpoint":
            {
              "@description":"ViewFrustum oblique side view",
              "@orientation":[0.8005,0.5926,0.0898,-0.3743],
              "@position":[-5,5,20]
            }
          },
          { "NavigationInfo":
            {
              "@type":["EXAMINE","FLY","ANY"]
            }
          },
          { "#comment":"Example use"
          },
          { "Switch":
            {
              "@DEF":"DECLViewFrustum_INSTANCE_VisibilitySwitch",
              "@whichChoice":-1,
              "-children":[
                { "Transform":
                  {
                    "@DEF":"DECLViewFrustum_INSTANCE_PositionTransform",
                    "@rotation":[0,1,0,3.14159],
                    "-children":[
                      { "Transform":
                        {
                          "@DEF":"DECLViewFrustum_INSTANCE_OrientationTransform",
                          "-children":[
                            { "Shape":
                              {
                                "-geometry":
                                  { "IndexedLineSet":
                                    {
                                      "@DEF":"DECLViewFrustum_INSTANCE_FrustumLines",
                                      "@coordIndex":[0,1,2,3,0,-1,4,5,6,7,4,-1,0,4,-1,1,5,-1,2,6,-1,3,7,-1],
                                      "-coord":
                                        { "Coordinate":
                                          {
                                            "@DEF":"DECLViewFrustum_INSTANCE_FrustumCoordinate",
                                            "@point":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
                                          }
                                        }
                                    }
                                  },
                                "-appearance":
                                  { "Appearance":
                                    {
                                      "-material":
                                        { "Material":
                                          {
                                            "@emissiveColor":[0.9,0.9,0.9]
                                          }
                                        }
                                    }
                                  }
                              }
                            },
                            { "Shape":
                              {
                                "-geometry":
                                  { "Extrusion":
                                    {
                                      "@DEF":"DECLViewFrustum_INSTANCE_FrustumExtrusion"
                                    }
                                  },
                                "-appearance":
                                  { "Appearance":
                                    {
                                      "@DEF":"DECLViewFrustum_INSTANCE_FrustumAppearance",
                                      "-material":
                                        { "Material":
                                          {
                                            "@transparency":0.75
                                          }
                                        }
                                    }
                                  }
                              }
                            },
                            { "Shape":
                              {
                                "-geometry":
                                  { "Sphere":
                                    {
                                      "@radius":0.08
                                    }
                                  },
                                "-appearance":
                                  { "Appearance":
                                    {
                                      "@USE":"DECLViewFrustum_INSTANCE_FrustumAppearance"
                                    }
                                  }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          { "Script":
            {
              "@DEF":"DECLViewFrustum_INSTANCE_GeometryComputationScript",
              "@directOutput":true,
              "field": [
                {
                  "@name":"visible",
                  "@accessType":"inputOutput",
                  "@appinfo":"Whether or not frustum geometry is rendered",
                  "@type":"SFBool",
                  "@value":true
                },
                {
                  "@name":"visibilitySwitchSelection",
                  "@accessType":"outputOnly",
                  "@appinfo":"Adjust Switch selection to make geometry visible or not",
                  "@type":"SFInt32"
                },
                {
                  "@name":"ViewpointNode",
                  "@accessType":"initializeOnly",
                  "@type":"SFNode",
                  "-children":[
                    { "#comment":"prefer empty description to prevent entry in player's ViewpointList"
                    }
                  ]
                },
                {
                  "@name":"NavigationInfoNode",
                  "@accessType":"initializeOnly",
                  "@type":"SFNode",
                  "-children":[
                    { "NavigationInfo":
                      {
                        "@visibilityLimit":15
                      }
                    }
                  ]
                },
                {
                  "@name":"FrustumCoordinate",
                  "@accessType":"initializeOnly",
                  "@type":"SFNode",
                  "-children":[
                    { "Coordinate":
                      {
                        "@USE":"DECLViewFrustum_INSTANCE_FrustumCoordinate"
                      }
                    }
                  ]
                },
                {
                  "@name":"FrustumExtrusion",
                  "@accessType":"initializeOnly",
                  "@type":"SFNode",
                  "-children":[
                    { "Extrusion":
                      {
                        "@USE":"DECLViewFrustum_INSTANCE_FrustumExtrusion"
                      }
                    }
                  ]
                },
                {
                  "@name":"recompute",
                  "@accessType":"inputOnly",
                  "@type":"SFBool"
                },
                {
                  "@name":"aspectRatio",
                  "@accessType":"inputOutput",
                  "@appinfo":"assumed ratio height/width",
                  "@type":"SFFloat",
                  "@value":0.75
                },
                {
                  "@name":"position_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"orientation_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFRotation"
                },
                {
                  "@name":"spine_changed",
                  "@accessType":"outputOnly",
                  "@type":"MFVec3f"
                },
                {
                  "@name":"scale_changed",
                  "@accessType":"outputOnly",
                  "@type":"MFVec2f"
                },
                {
                  "@name":"point_changed",
                  "@accessType":"outputOnly",
                  "@type":"MFVec3f"
                },
                {
                  "@name":"trace",
                  "@accessType":"initializeOnly",
                  "@type":"SFBool",
                  "@value":true
                }
              ],
              "#sourceText":[
"// Description: Perform geometric computations for ViewFrustum prototype",
"// Filename:    ViewFrustumPrototypeScript.js",
"// Author:      Don Brutzman",
"// Identifier:  http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14-Prototypes/ViewFrustumPrototypeScript.js",
"// Created:     16 August 2008",
"// Revised:     10 October 2015",
"// Reference:   ViewFrustumPrototype.x3d",
"// Reference:   ViewFrustumExample.x3d",
"// Drawing:     ViewFrustumComputation.png",
"// License:     ../license.html",
"",
"function floatArrayToString (inputArray) // overcome irregular .toString() support by X3D browsers",
"{",
"    var outputString = '';",
"    var i;",
"    for (i=0; i < inputArray.length; i++)",
"    {",
"        outputString += inputArray[i].toString();",
"        if (i < inputArray.length - 1) ",
"        {",
"            outputString += ' '; // no extra space at end",
"        }",
"    }",
"    return outputString;",
"}",
"",
"function set_visible (eventValue)",
"{",
"    visible = eventValue;",
"    if (visible)",
"    {",
"        visibilitySwitchSelection =  0;",
"    }",
"    else ",
"    {",
"        visibilitySwitchSelection = -1;",
"    }",
"}",
"",
"function initialize ()",
"{",
"    var scriptName = 'ViewFrustumPrototypeScript';",
"    var fieldOfView, nearClipPlaneDistance, farClipPlaneDistance;",
"",
"    Browser.print ('[' + scriptName + '] ' + 'trace=' + trace + '\n');",
"",
"    if ((ViewpointNode == null) && (NavigationInfoNode == null))",
"    {",
"        Browser.print ('[' + scriptName + '] ' + 'Viewpoint and NavigationInfo nodes both missing, using default values\n');",
"    }",
"    else if (ViewpointNode == null)",
"    {",
"        Browser.print ('[' + scriptName + '] ' + 'Viewpoint node missing, using default values\n');",
"    }",
"    else if (NavigationInfoNode == null)",
"    {",
"        Browser.print ('[' + scriptName + '] ' + 'NavigationInfo node missing, using default values\n');",
"    }",
"    ",
"    if (ViewpointNode != null)",
"    {",
"        if (trace) ",
"        {",
"            Browser.print ('[' + scriptName + '] ' + 'input  ' +",
"            '<Viewpoint position=\"'        + ViewpointNode.position.toString() + '\"' +",
"                   ' orientation=\"'        + ViewpointNode.orientation.toString() + '\"' +",
"                   ' fieldOfView=\"'        + ViewpointNode.fieldOfView.toString() + '\"' + '></Viewpoint>\n');",
"       }",
"        position_changed    = ViewpointNode.position;",
"        orientation_changed = ViewpointNode.orientation_changed;",
"        fieldOfView = ViewpointNode.fieldOfView;",
"    }",
"    else",
"    {",
"        position_changed    = new SFVec3f    (0, 0, 10);",
"        orientation_changed = new SFRotation (0, 1, 0, 0);",
"        fieldOfView = 0.7854;",
"    }",
"    if (trace) ",
"    {",
"        Browser.print ('[' + scriptName + '] ' + 'ViewFrustum fieldOfView=' + fieldOfView + '\n');",
"    }",
"",
"    if (NavigationInfoNode != null)",
"    {",
"        if (trace)",
"        {",
"            Browser.print ('[' + scriptName + '] ' + 'input  ' +",
"            '<NavigationInfo avatarSize=\"' +",
"                floatArrayToString (NavigationInfoNode.avatarSize) + '\"' +",
"            ' visibilityLimit=\"' + NavigationInfoNode.visibilityLimit.toString() + '\"></NavigationInfo>\n');",
"        }",
"        nearClipPlaneDistance = NavigationInfoNode.avatarSize[0];",
"         farClipPlaneDistance = NavigationInfoNode.visibilityLimit;",
"    }",
"    else",
"    {",
"        // default avatarSize array: [0.25 1.6 0.75]",
"        nearClipPlaneDistance =   0.25;",
"        farClipPlaneDistance  = 100.0;",
"    }",
"    if (trace) ",
"    {",
"        Browser.print ('[' + scriptName + '] ' +",
"            'ViewFrustum farClipPlaneDistance=' + farClipPlaneDistance + '\n');",
"    }",
"",
"    if  (farClipPlaneDistance == 0) ",
"    {",
"        farClipPlaneDistance = 100.0;",
"        Browser.print ('[' + scriptName + '] ' + ",
"            ' found visibilityLimit=\"0\" i.e. unlimited, instead drawing farClipPlaneDistance at ' + farClipPlaneDistance + 'm\n');",
"    }    ",
"    var nearHalfWidth  = Math.tan(fieldOfView / 2.0) * nearClipPlaneDistance;",
"    var  farHalfWidth  = Math.tan(fieldOfView / 2.0) *  farClipPlaneDistance;",
"    ",
"    spine_changed = new MFVec3f (new SFVec3f (0.0, 0.0, nearClipPlaneDistance), ",
"                                 new SFVec3f (0.0, 0.0,  farClipPlaneDistance));",
"    scale_changed        = new MFVec2f (new SFVec2f (nearHalfWidth, aspectRatio * nearHalfWidth),",
"                                        new SFVec2f ( farHalfWidth, aspectRatio *  farHalfWidth));",
"    if (trace) ",
"    {",
"        Browser.print ('[' + scriptName + '] ' + 'output ' +",
"        '<Extrusion DEF=\"FrustumExtrusion\"' +",
"               ' spine=\"' + floatArrayToString (spine_changed) + '\"' +",
"               ' scale=\"' + floatArrayToString (scale_changed) + '\"' + '></Extrusion>\n');  // default crossSection used",
"    }",
"    point_changed = new MFVec3f (",
"      new SFVec3f ( nearHalfWidth,  aspectRatio * nearHalfWidth, nearClipPlaneDistance),",
"      new SFVec3f ( nearHalfWidth, -aspectRatio * nearHalfWidth, nearClipPlaneDistance),",
"      new SFVec3f (-nearHalfWidth, -aspectRatio * nearHalfWidth, nearClipPlaneDistance),",
"      new SFVec3f (-nearHalfWidth,  aspectRatio * nearHalfWidth, nearClipPlaneDistance),",
"      new SFVec3f (  farHalfWidth,  aspectRatio *  farHalfWidth,  farClipPlaneDistance),",
"      new SFVec3f (  farHalfWidth,  aspectRatio * -farHalfWidth,  farClipPlaneDistance),",
"      new SFVec3f ( -farHalfWidth,  aspectRatio * -farHalfWidth,  farClipPlaneDistance),",
"      new SFVec3f ( -farHalfWidth,  aspectRatio *  farHalfWidth,  farClipPlaneDistance));",
"    if (trace) ",
"    {",
"        Browser.print ('[' + scriptName + '] ' + 'output ' +",
"        '<Coordinate DEF=\"FrustumCoordinate\"' +",
"               ' point=\"' + floatArrayToString (point_changed) + '\"' + '></Coordinate>\n');",
"    }",
"    set_visible (visible);",
"}",
"",
"function recompute (value)",
"{",
"    if (value == true) ",
"    {",
"        initialize();",
"    }",
"}"
]
            }
          },
          { "ROUTE":
            {
              "@fromNode":"DECLViewFrustum_INSTANCE_GeometryComputationScript",
              "@fromField":"visibilitySwitchSelection",
              "@toNode":"DECLViewFrustum_INSTANCE_VisibilitySwitch",
              "@toField":"whichChoice"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"DECLViewFrustum_INSTANCE_GeometryComputationScript",
              "@fromField":"position_changed",
              "@toNode":"DECLViewFrustum_INSTANCE_PositionTransform",
              "@toField":"translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"DECLViewFrustum_INSTANCE_GeometryComputationScript",
              "@fromField":"orientation_changed",
              "@toNode":"DECLViewFrustum_INSTANCE_OrientationTransform",
              "@toField":"rotation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"DECLViewFrustum_INSTANCE_GeometryComputationScript",
              "@fromField":"spine_changed",
              "@toNode":"DECLViewFrustum_INSTANCE_FrustumExtrusion",
              "@toField":"set_spine"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"DECLViewFrustum_INSTANCE_GeometryComputationScript",
              "@fromField":"scale_changed",
              "@toNode":"DECLViewFrustum_INSTANCE_FrustumExtrusion",
              "@toField":"set_scale"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"DECLViewFrustum_INSTANCE_GeometryComputationScript",
              "@fromField":"point_changed",
              "@toNode":"DECLViewFrustum_INSTANCE_FrustumCoordinate",
              "@toField":"point"
            }
          },
          { "#comment":"Visualization assists"
          },
          { "Transform":
            {
              "@scale":[5,5,5]
            }
          }
        ]
    }
  }
}