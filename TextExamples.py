from jnius import autoclass
from X3Dautoclass import *
X3D0 =  X3DObject().setProfile("Immersive").setVersion("3.0")
head1 = headObject()
meta2 = metaObject().setName("title").setContent("TextExamples.x3d")
head1.addMeta(meta2)
meta3 = metaObject().setName("description").setContent("Show different escape-character text examples for embedded quotation marks.")
head1.addMeta(meta3)
meta4 = metaObject().setName("creator").setContent("Don Brutzman")
head1.addMeta(meta4)
meta5 = metaObject().setName("created").setContent("7 April 2001")
head1.addMeta(meta5)
meta6 = metaObject().setName("modified").setContent("26 April 2016")
head1.addMeta(meta6)
meta7 = metaObject().setName("warning").setContent("Note that X3D Canonicalization (C14N) will scrub alternate XML character representations, be careful to check original encoding into version control.")
head1.addMeta(meta7)
meta8 = metaObject().setName("warning").setContent("Usually this source document needs to be inspected and edited using a plain-text editor in order to see the differences in these XML-equivalent text representations.")
head1.addMeta(meta8)
meta9 = metaObject().setName("identifier").setContent("http://www.web3d.org/x3d/content/examples/Basic/development/TextExamples.x3d")
head1.addMeta(meta9)
meta10 = metaObject().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit")
head1.addMeta(meta10)
meta11 = metaObject().setName("license").setContent("../license.html")
head1.addMeta(meta11)
meta12 = metaObject().setName("translated").setContent("08 May 2017")
head1.addMeta(meta12)
meta13 = metaObject().setName("generator").setContent("X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html")
head1.addMeta(meta13)
meta14 = metaObject().setName("reference").setContent("X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding")
head1.addMeta(meta14)
meta15 = metaObject().setName("translated").setContent("8 May 2017")
head1.addMeta(meta15)
meta16 = metaObject().setName("generator").setContent("X3DJSONLD: https://github.com/coderextreme/X3DJSONLD")
head1.addMeta(meta16)
X3D0.setHead(head1)
Scene17 = SceneObject()
Transform18 = TransformObject().setTranslation([0,2,0])
Shape19 = ShapeObject()
Text20 = TextObject().setString(["Compare special character escaping"])
FontStyle21 = FontStyleObject().setDEF("testFontStyle").setJustify(["MIDDLE","MIDDLE"]).setSize(0.8)
Text20.setFontStyle(FontStyle21)
Shape19.setGeometry(Text20)
Appearance22 = AppearanceObject().setDEF("LightBlueAppearance")
Material23 = MaterialObject().setDiffuseColor([0.1,0.7,0.7])
Appearance22.setMaterial(Material23)
Shape19.setAppearance(Appearance22)
Transform18.addChild(Shape19)
Scene17.addChild(Transform18)
Transform24 = TransformObject().setTranslation([-3,0,0])
Shape25 = ShapeObject()
Text26 = TextObject().setString(["I don't think so","","he said \\\"Hi\\\""])
FontStyle27 = FontStyleObject().setUSE("testFontStyle")
Text26.setFontStyle(FontStyle27)
Shape25.setGeometry(Text26)
Appearance28 = AppearanceObject().setUSE("LightBlueAppearance")
Shape25.setAppearance(Appearance28)
Transform24.addChild(Shape25)
Scene17.addChild(Transform24)
Transform29 = TransformObject().setTranslation([3,0,0])
Shape30 = ShapeObject()
Text31 = TextObject().setString(["I don't think so","","he said \\\"Hi\\\""])
FontStyle32 = FontStyleObject().setUSE("testFontStyle")
Text31.setFontStyle(FontStyle32)
Shape30.setGeometry(Text31)
Appearance33 = AppearanceObject().setUSE("LightBlueAppearance")
Shape30.setAppearance(Appearance33)
Transform29.addChild(Shape30)
Scene17.addChild(Transform29)
X3D0.setScene(Scene17)

X3D0.toFileX3D("TextExamples.new.x3d")
