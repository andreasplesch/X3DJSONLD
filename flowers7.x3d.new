<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Immersive" version="3.3" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.3.xsd"><head><meta name="title" content="flowers7.x3d"></meta>
<meta name="creator" content="John Carlson"></meta>
<meta name="generator" content="manual"></meta>
<meta name="identifier" content="http://coderextreme.net/X3DJSONLD/flowers7.x3d"></meta>
<meta name="description" content="a flower"></meta>
<meta name="translated" content="10 May 2017"></meta>
<meta name="generator" content="X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"></meta>
<meta name="reference" content="X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"></meta>
<meta name="translated" content="12 May 2017"></meta>
<meta name="generator" content="X3DJSONLD: https://github.com/coderextreme/X3DJSONLD"></meta>
</head>
<Scene><NavigationInfo></NavigationInfo>
<!--Images courtesy of Paul Debevec's Light Probe Image Gallery--><Background DEF="background" backUrl="&quot;cubemap/all_probes/beach_cross/beach_back.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_back.png&quot;" bottomUrl="&quot;cubemap/all_probes/beach_cross/beach_bottom.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_bottom.png&quot;" frontUrl="&quot;cubemap/all_probes/beach_cross/beach_front.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_front.png&quot;" leftUrl="&quot;cubemap/all_probes/beach_cross/beach_left.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_left.png&quot;" rightUrl="&quot;cubemap/all_probes/beach_cross/beach_right.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_right.png&quot;" topUrl="&quot;cubemap/all_probes/beach_cross/beach_top.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_top.png&quot;"></Background>
<Viewpoint position="0 0 40" description="Transparent rose"></Viewpoint>
<Transform DEF="Rose01"><Shape><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0.7 0.7 0.7" specularColor="0.5 0.5 0.5"></Material>
<ComposedCubeMapTexture containerField="texture"><ImageTexture containerField="back" DEF="backShader" url="&quot;cubemap/all_probes/beach_cross/beach_back.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_back.png&quot;"></ImageTexture>
<ImageTexture containerField="bottom" DEF="bottomShader" url="&quot;cubemap/all_probes/beach_cross/beach_bottom.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_bottom.png&quot;"></ImageTexture>
<ImageTexture containerField="front" DEF="frontShader" url="&quot;cubemap/all_probes/beach_cross/beach_front.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_front.png&quot;"></ImageTexture>
<ImageTexture containerField="left" DEF="leftShader" url="&quot;cubemap/all_probes/beach_cross/beach_left.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_left.png&quot;"></ImageTexture>
<ImageTexture containerField="right" DEF="rightShader" url="&quot;cubemap/all_probes/beach_cross/beach_right.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_right.png&quot;"></ImageTexture>
<ImageTexture containerField="top" DEF="topShader" url="&quot;cubemap/all_probes/beach_cross/beach_top.png&quot; &quot;http://coderextreme.net/X3DJSONLD/cubemap/all_probes/beach_cross/beach_top.png&quot;"></ImageTexture>
</ComposedCubeMapTexture>
<ComposedShader DEF="cobweb" language="GLSL"><field name="set_cube" type="SFInt32" accessType="inputOnly" value="0"></field>
<field name="set_chromaticDispertion" accessType="initializeOnly" type="SFVec3f" value="0.98 1 1.033"></field>
<field name="set_bias" type="SFFloat" accessType="inputOnly" value="0.5"></field>
<field name="set_scale" type="SFFloat" accessType="inputOnly" value="0.5"></field>
<field name="set_power" type="SFFloat" accessType="inputOnly" value="2"></field>
<field name="set_a" type="SFFloat" accessType="inputOnly" value="10"></field>
<field name="set_b" type="SFFloat" accessType="inputOnly" value="1"></field>
<field name="set_c" type="SFFloat" accessType="inputOnly" value="20"></field>
<field name="set_d" type="SFFloat" accessType="inputOnly" value="20"></field>
<field name="set_tdelta" type="SFFloat" accessType="inputOnly" value="0"></field>
<field name="set_pdelta" type="SFFloat" accessType="inputOnly" value="0"></field>
<ShaderPart url="&quot;cobweb_flowers_input.vs&quot; &quot;http://coderextreme.net/X3DJSONLD/cobweb_flowers_input.vs&quot;" type="VERTEX"></ShaderPart>
<ShaderPart url="&quot;pc_input_flowers.fs&quot; &quot;http://coderextreme.net/X3DJSONLD/pc_input_flowers.fs&quot;" type="FRAGMENT"></ShaderPart>
</ComposedShader>
</Appearance>
<Sphere containerField="geometry" solid="false" radius="20"></Sphere>
</Shape>
</Transform>
<Script DEF="UrlSelector" directOutput="true"><field name="frontUrls" type="MFString" accessType="initializeOnly" value="&quot;cubemap/all_probes/beach_cross/beach_front.png&quot; &quot;cubemap/all_probes/building_cross/building_front.png&quot; &quot;cubemap/all_probes/campus_cross/campus_front.png&quot; &quot;cubemap/all_probes/galileo_cross/galileo_front.png&quot; &quot;cubemap/all_probes/grace_cross/grace_front.png&quot; &quot;cubemap/all_probes/kitchen_cross/kitchen_front.png&quot; &quot;cubemap/all_probes/rnl_cross/rnl_front.png&quot; &quot;cubemap/all_probes/stpeters_cross/stpeters_front.png&quot; &quot;cubemap/all_probes/uffizi_cross/uffizi_front.png&quot;"></field>
<field name="backUrls" type="MFString" accessType="initializeOnly" value="&quot;cubemap/all_probes/beach_cross/beach_back.png&quot; &quot;cubemap/all_probes/building_cross/building_back.png&quot; &quot;cubemap/all_probes/campus_cross/campus_back.png&quot; &quot;cubemap/all_probes/galileo_cross/galileo_back.png&quot; &quot;cubemap/all_probes/grace_cross/grace_back.png&quot; &quot;cubemap/all_probes/kitchen_cross/kitchen_back.png&quot; &quot;cubemap/all_probes/rnl_cross/rnl_back.png&quot; &quot;cubemap/all_probes/stpeters_cross/stpeters_back.png&quot; &quot;cubemap/all_probes/uffizi_cross/uffizi_back.png&quot;"></field>
<field name="leftUrls" type="MFString" accessType="initializeOnly" value="&quot;cubemap/all_probes/beach_cross/beach_left.png&quot; &quot;cubemap/all_probes/building_cross/building_left.png&quot; &quot;cubemap/all_probes/campus_cross/campus_left.png&quot; &quot;cubemap/all_probes/galileo_cross/galileo_left.png&quot; &quot;cubemap/all_probes/grace_cross/grace_left.png&quot; &quot;cubemap/all_probes/kitchen_cross/kitchen_left.png&quot; &quot;cubemap/all_probes/rnl_cross/rnl_left.png&quot; &quot;cubemap/all_probes/stpeters_cross/stpeters_left.png&quot; &quot;cubemap/all_probes/uffizi_cross/uffizi_left.png&quot;"></field>
<field name="rightUrls" type="MFString" accessType="initializeOnly" value="&quot;cubemap/all_probes/beach_cross/beach_right.png&quot; &quot;cubemap/all_probes/building_cross/building_right.png&quot; &quot;cubemap/all_probes/campus_cross/campus_right.png&quot; &quot;cubemap/all_probes/galileo_cross/galileo_right.png&quot; &quot;cubemap/all_probes/grace_cross/grace_right.png&quot; &quot;cubemap/all_probes/kitchen_cross/kitchen_right.png&quot; &quot;cubemap/all_probes/rnl_cross/rnl_right.png&quot; &quot;cubemap/all_probes/stpeters_cross/stpeters_right.png&quot; &quot;cubemap/all_probes/uffizi_cross/uffizi_right.png&quot;"></field>
<field name="topUrls" type="MFString" accessType="initializeOnly" value="&quot;cubemap/all_probes/beach_cross/beach_top.png&quot; &quot;cubemap/all_probes/building_cross/building_top.png&quot; &quot;cubemap/all_probes/campus_cross/campus_top.png&quot; &quot;cubemap/all_probes/galileo_cross/galileo_top.png&quot; &quot;cubemap/all_probes/grace_cross/grace_top.png&quot; &quot;cubemap/all_probes/kitchen_cross/kitchen_top.png&quot; &quot;cubemap/all_probes/rnl_cross/rnl_top.png&quot; &quot;cubemap/all_probes/stpeters_cross/stpeters_top.png&quot; &quot;cubemap/all_probes/uffizi_cross/uffizi_top.png&quot;"></field>
<field name="bottomUrls" type="MFString" accessType="initializeOnly" value="&quot;cubemap/all_probes/beach_cross/beach_bottom.png&quot; &quot;cubemap/all_probes/building_cross/building_bottom.png&quot; &quot;cubemap/all_probes/campus_cross/campus_bottom.png&quot; &quot;cubemap/all_probes/galileo_cross/galileo_bottom.png&quot; &quot;cubemap/all_probes/grace_cross/grace_bottom.png&quot; &quot;cubemap/all_probes/kitchen_cross/kitchen_bottom.png&quot; &quot;cubemap/all_probes/rnl_cross/rnl_bottom.png&quot; &quot;cubemap/all_probes/stpeters_cross/stpeters_bottom.png&quot; &quot;cubemap/all_probes/uffizi_cross/uffizi_bottom.png&quot;"></field>
<field name="front_changed" type="MFString" accessType="outputOnly"></field>
<field name="back_changed" type="MFString" accessType="outputOnly"></field>
<field name="left_changed" type="MFString" accessType="outputOnly"></field>
<field name="right_changed" type="MFString" accessType="outputOnly"></field>
<field name="top_changed" type="MFString" accessType="outputOnly"></field>
<field name="bottom_changed" type="MFString" accessType="outputOnly"></field>
<field name="set_fraction" type="SFFloat" accessType="inputOnly"></field>
<field name="old" type="SFInt32" accessType="inputOutput" value="-1"></field>
<![CDATA[ecmascript:
        function set_fraction( f, tm ) {
            var side = Math.floor(f*frontUrls.length);
            if (side > frontUrls.length-1) {
                side = 0;
            }
            if (side != old) {
                    old = side;
                    front_changed[0] = frontUrls[side];
                    back_changed[0] = backUrls[side];
                    left_changed[0] = leftUrls[side];
                    right_changed[0] = rightUrls[side];
                    top_changed[0] = topUrls[side];
                    bottom_changed[0] = bottomUrls[side];
            }
        }
]]></Script>
<TimeSensor DEF="Clock" cycleInterval="45" loop="true"></TimeSensor>
<ROUTE fromNode="Clock" fromField="fraction_changed" toNode="UrlSelector" toField="set_fraction"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="front_changed" toNode="background" toField="frontUrl"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="back_changed" toNode="background" toField="backUrl"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="left_changed" toNode="background" toField="leftUrl"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="right_changed" toNode="background" toField="rightUrl"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="top_changed" toNode="background" toField="topUrl"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="bottom_changed" toNode="background" toField="bottomUrl"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="front_changed" toNode="frontShader" toField="url"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="back_changed" toNode="backShader" toField="url"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="left_changed" toNode="leftShader" toField="url"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="right_changed" toNode="rightShader" toField="url"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="top_changed" toNode="topShader" toField="url"></ROUTE>
<ROUTE fromNode="UrlSelector" fromField="bottom_changed" toNode="bottomShader" toField="url"></ROUTE>
<Script DEF="Animate" directOutput="true"><field name="set_fraction" type="SFFloat" accessType="inputOnly"></field>
<field name="a_changed" type="SFFloat" accessType="outputOnly" value="10"></field>
<field name="b_changed" type="SFFloat" accessType="outputOnly" value="1"></field>
<field name="c_changed" type="SFFloat" accessType="outputOnly" value="20"></field>
<field name="d_changed" type="SFFloat" accessType="outputOnly" value="20"></field>
<field name="tdelta_changed" type="SFFloat" accessType="outputOnly" value="0"></field>
<field name="pdelta_changed" type="SFFloat" accessType="outputOnly" value="0"></field>
<field name="set_a" type="SFFloat" accessType="inputOnly" value="10"></field>
<field name="set_b" type="SFFloat" accessType="inputOnly" value="1"></field>
<field name="set_c" type="SFFloat" accessType="inputOnly" value="20"></field>
<field name="set_d" type="SFFloat" accessType="inputOnly" value="20"></field>
<field name="set_tdelta" type="SFFloat" accessType="inputOnly" value="0"></field>
<field name="set_pdelta" type="SFFloat" accessType="inputOnly" value="0"></field>
<![CDATA[ecmascript:

function set_a(value) {
	a = value;
}

function set_b(value) {
	b = value;
}

function set_c(value) {
	c = value;
}

function set_d(value) {
	d = value;
}

function set_tdelta(value) {
	tdelta = value;
}

function set_tdelta(value) {
	tdelta = value;
}

function set_fraction() {
	var choice = Math.floor(Math.random() * 4);
	if (choice == 0) {
		set_a(a + Math.floor(Math.random() * 2) * 2 - 1);
	} else if (choice == 1) {
		set_b(b + Math.floor(Math.random() * 2) * 2 - 1);
	} else if (choice == 2) {
		set_c(c + Math.floor(Math.random() * 2) * 2 - 1);
	} else if (choice == 3) {
		set_d(d + Math.floor(Math.random() * 2) * 2 - 1);
	}
	set_tdelta(tdelta + 0.5);
	set_pdelta(pdelta + 0.5);
	if (a < 1) {
		set_a(10);
	}
	if (b < 1) {
		set_b(10);
	}
	if (c < 1) {
		set_c(4);
	}
	if (c > 20) {
		set_c(4);
	}
	if (d < 1) {
		set_d(4);
	}
	if (d > 20) {
		set_d(4);
	}
	// console.log(a, b, c, d, tdelta, pdelta);
}
]]></Script>
<ROUTE fromNode="Animate" fromField="a_changed" toNode="cobweb" toField="set_a"></ROUTE>
<ROUTE fromNode="Animate" fromField="b_changed" toNode="cobweb" toField="set_b"></ROUTE>
<ROUTE fromNode="Animate" fromField="c_changed" toNode="cobweb" toField="set_c"></ROUTE>
<ROUTE fromNode="Animate" fromField="d_changed" toNode="cobweb" toField="set_d"></ROUTE>
<ROUTE fromNode="Animate" fromField="pdelta_changed" toNode="cobweb" toField="set_pdelta"></ROUTE>
<ROUTE fromNode="Animate" fromField="tdelta_changed" toNode="cobweb" toField="set_tdelta"></ROUTE>
</Scene>
</X3D>